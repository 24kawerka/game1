{"version":3,"sources":["assets/images/health.png","helpers/getRandomInt.ts","components/Timer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","getRandomInt","max","Math","floor","random","Timer","props","time","setTime","useEffect","interval","setInterval","prevTime","clearInterval","React","createElement","className","App","position","setPosition","useState","x","window","innerWidth","y","innerHeight","weaponPosition","setWeaponPosition","isAttack","setIsAttack","direction","setDirection","healthPoint","setHealthPoint","enemies","setEnemies","enemiesTotalCount","setEmiesTotalCount","defaultEnemySpeed","setDefaultEnemySpeed","spawnEnemyDelay","setSpawnEnemyDelay","weaponSize","length","isShootByEnemy","find","item","prev","filter","id","index","alert","resetGame","moveFasterId","speedEnemyImprove","enemyCreationInterval","Date","now","randomStartXY","newEnemy","prevEnemies","movementInterval","map","enemy","handleKeyDown","e","key","attack","min","addEventListener","removeEventListener","setTimeout","src","healthIcon","alt","style","left","top","width","height","includes","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1ce5cf75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/health.bc5ad905.png\";","export const getRandomInt = (max: number) => {\r\n  return Math.floor(Math.random() * max);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\ninterface IProps {\r\n  time: number;\r\n  setTime: any;\r\n}\r\n\r\nconst Timer = (props: IProps) => {\r\n  const { time, setTime } = props;\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime((prevTime: any) => prevTime + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return <div className=\"timer\">Time: {time}</div>;\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport healthIcon from './assets/images/health.png';\nimport { getRandomInt } from './helpers/getRandomInt';\nimport Timer from './components/Timer';\n\ntype IDirection = 'right' | 'left' | 'up' | 'down';\n\nfunction App() {\n  const [position, setPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  });\n  const [weaponPosition, setWeaponPosition] = useState({ x: 75, y: 100 });\n  const [isAttack, setIsAttack] = useState(false);\n  const [direction, setDirection] = useState<IDirection>('down');\n  const [healthPoint, setHealthPoint] = useState([1, 2, 3, 4, 5]);\n  const [enemies, setEnemies] = useState<any>([]);\n  const [time, setTime] = useState(0);\n  const [enemiesTotalCount, setEmiesTotalCount] = useState(30);\n  const [defaultEnemySpeed, setDefaultEnemySpeed] = useState(100);\n  const [spawnEnemyDelay, setSpawnEnemyDelay] = useState(200);\n\n  const size = 50;\n  const weaponSize = {\n    height: 20,\n    width: 5,\n  };\n\n  useEffect(() => {\n    if (healthPoint.length > 0) {\n      const isShootByEnemy =\n        enemies.length > 0 &&\n        enemies.find(\n          (item: any) =>\n            item.x < position.x + size &&\n            item.x + 15 > position.x &&\n            item.y < position.y + size &&\n            item.y + 20 > position.y,\n        );\n      if (isShootByEnemy) {\n        setEnemies((prev: any) =>\n          prev.filter((item: any) => item.id !== isShootByEnemy.id),\n        );\n        setHealthPoint((prev) =>\n          prev.filter((item, index) => index !== prev.length - 1),\n        );\n      }\n    }\n  }, [position, enemies]);\n\n  useEffect(() => {\n    if (healthPoint.length === 0) {\n      alert('Dead');\n      resetGame();\n      setTime(0);\n    }\n  }, [healthPoint]);\n\n  useEffect(() => {\n    const speedEnemyImprove = () => {\n      setDefaultEnemySpeed((prev) => prev / 2);\n      setEmiesTotalCount((prev) => prev + 5);\n      setSpawnEnemyDelay((prev) => prev / 2);\n    };\n    const moveFasterId = setInterval(speedEnemyImprove, 5000);\n    return () => clearInterval(moveFasterId);\n  }, []);\n\n  useEffect(() => {\n    const enemyCreationInterval = setInterval(() => {\n      if (enemies.length < enemiesTotalCount) {\n        const id = Date.now();\n        const randomStartXY = getRandomInt(2);\n        const newEnemy = {\n          id,\n          x: randomStartXY ? getRandomInt(window.innerWidth - 45) : 0,\n          y: !randomStartXY ? getRandomInt(window.innerHeight - 45) : 0,\n          direction: randomStartXY ? 'down' : 'right',\n        };\n        setEnemies((prevEnemies: any) => [...prevEnemies, newEnemy]);\n      }\n    }, spawnEnemyDelay);\n\n    return () => clearInterval(enemyCreationInterval);\n  }, []);\n\n  useEffect(() => {\n    const movementInterval = setInterval(() => {\n      setEnemies((prevEnemies: any) =>\n        prevEnemies\n          .map((enemy: any) => {\n            if (enemy.direction === 'right') {\n              return enemy.x < window.innerWidth - 45\n                ? { ...enemy, x: enemy.x + 15 }\n                : null;\n            } else if (enemy.direction === 'down') {\n              return enemy.y < window.innerHeight - 45\n                ? { ...enemy, y: enemy.y + 15 }\n                : null;\n            }\n            return enemy;\n          })\n          .filter((enemy: any) => enemy !== null),\n      );\n    }, defaultEnemySpeed);\n\n    return () => clearInterval(movementInterval);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (e: any) => {\n      switch (e.key) {\n        case ' ':\n          attack();\n          break;\n        case 'ArrowLeft':\n          setPosition((prev) => ({ ...prev, x: Math.max(prev.x - 15, 0) }));\n          setDirection('left');\n          break;\n        case 'ArrowDown':\n          setPosition((prev) => ({\n            ...prev,\n            y: Math.min(prev.y + 15, window.innerHeight - size),\n          }));\n          setDirection('down');\n          break;\n        case 'ArrowUp':\n          setPosition((prev) => ({\n            ...prev,\n            y: Math.max(prev.y - 15, 0),\n          }));\n          setDirection('up');\n          break;\n        case 'ArrowRight':\n          setPosition((prev) => ({\n            ...prev,\n            x: Math.min(prev.x + 15, window.innerWidth - size),\n          }));\n          setDirection('right');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [position]);\n\n  useEffect(() => {\n    switch (direction) {\n      case 'left':\n        setWeaponPosition({\n          x: position.x - weaponSize.height,\n          y: position.y + (size - weaponSize.height) / 2,\n        });\n        break;\n      case 'right':\n        setWeaponPosition({\n          x: position.x + size,\n          y: position.y + (size - weaponSize.height) / 2,\n        });\n        break;\n      case 'up':\n        setWeaponPosition({\n          x: position.x + (size - weaponSize.width) / 2,\n          y: position.y - weaponSize.height,\n        });\n        break;\n      case 'down':\n        setWeaponPosition({\n          x: position.x + (size - weaponSize.width) / 2,\n          y: position.y + size,\n        });\n        break;\n      default:\n        break;\n    }\n  }, [direction, position]);\n\n  const attack = () => {\n    setIsAttack(true);\n    setTimeout(() => {\n      setIsAttack(false);\n    }, 200);\n  };\n\n  const resetGame = () => {\n    setHealthPoint([1, 2, 3, 4, 5]);\n    setEnemies([]);\n    setPosition({\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Timer time={time} setTime={setTime} />\n      <div className=\"health-container\">\n        {healthPoint.map((item) => (\n          <img src={healthIcon} alt=\"\" key={item} />\n        ))}\n      </div>\n      {enemies.length > 0 &&\n        enemies.map((item: any) => (\n          <div\n            className=\"enemy\"\n            key={item.id}\n            style={{\n              left: item.x,\n              top: item.y,\n              width: 30,\n              height: 30,\n            }}></div>\n        ))}\n      <div\n        className=\"square\"\n        id=\"person\"\n        style={{\n          left: position.x,\n          top: position.y,\n          width: size,\n          height: size,\n        }}></div>\n      {isAttack && (\n        <div\n          className=\"weapon\"\n          style={{\n            left: weaponPosition.x,\n            top: weaponPosition.y,\n            width: ['up', 'down'].includes(direction)\n              ? weaponSize.width\n              : weaponSize.height,\n            height: ['up', 'down'].includes(direction)\n              ? weaponSize.height\n              : weaponSize.width,\n          }}></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["assets/images/health.png","helpers/getRandomInt.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","getRandomInt","max","Math","floor","random","App","position","setPosition","useState","x","window","innerWidth","y","innerHeight","weaponPosition","setWeaponPosition","isAttack","setIsAttack","direction","setDirection","healthPoint","setHealthPoint","enemies","setEnemies","enemiesTotalCount","setEmiesTotalCount","defaultEnemySpeed","setDefaultEnemySpeed","spawnEnemyDelay","setSpawnEnemyDelay","isDead","setIsDead","weaponSize","console","log","useEffect","isShootByEnemy","length","find","item","alert","moveFasterId","setInterval","speedEnemyImprove","prev","clearInterval","enemyCreationInterval","id","Date","now","randomStartXY","newEnemy","prevEnemies","movementInterval","map","enemy","filter","handleKeyDown","e","key","attack","min","addEventListener","removeEventListener","setTimeout","React","createElement","className","src","healthIcon","alt","style","left","top","width","height","includes","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.85583cf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/health.bc5ad905.png\";","export const getRandomInt = (max: number) => {\r\n  return Math.floor(Math.random() * max);\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport healthIcon from './assets/images/health.png';\nimport { getRandomInt } from './helpers/getRandomInt';\n\ntype IDirection = 'right' | 'left' | 'up' | 'down';\n\nfunction App() {\n  const [position, setPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  });\n  const [weaponPosition, setWeaponPosition] = useState({ x: 75, y: 100 });\n  const [isAttack, setIsAttack] = useState(false);\n  const [direction, setDirection] = useState<IDirection>('down');\n  const [healthPoint, setHealthPoint] = useState([1, 2, 3, 4, 5]);\n  const [enemies, setEnemies] = useState<any>([]);\n  const [enemiesTotalCount, setEmiesTotalCount] = useState(30);\n  const [defaultEnemySpeed, setDefaultEnemySpeed] = useState(100);\n  const [spawnEnemyDelay, setSpawnEnemyDelay] = useState(200);\n  const [isDead, setIsDead] = useState(false);\n  const size = 50;\n  const weaponSize = {\n    height: 20,\n    width: 5,\n  };\n  console.log(enemies, position);\n  useEffect(() => {\n    if (!isDead) {\n      const isShootByEnemy =\n        enemies.length > 0 &&\n        enemies.find(\n          (item: any) =>\n            item.x + 15 === position.x + 25 || item.y + 15 === position.y + 25,\n        );\n      if (isShootByEnemy) {\n        console.log(isShootByEnemy, position);\n        setIsDead(true);\n        alert('dead');\n      }\n    }\n  }, [position, enemies]);\n\n  useEffect(() => {\n    const speedEnemyImprove = () => {\n      setDefaultEnemySpeed((prev) => prev / 2);\n      setEmiesTotalCount((prev) => prev + 5);\n      setSpawnEnemyDelay((prev) => prev / 2);\n    };\n    const moveFasterId = setInterval(speedEnemyImprove, 5000);\n    return () => clearInterval(moveFasterId);\n  }, []);\n\n  useEffect(() => {\n    const enemyCreationInterval = setInterval(() => {\n      if (enemies.length < enemiesTotalCount) {\n        const id = Date.now();\n        const randomStartXY = getRandomInt(2);\n        const newEnemy = {\n          id,\n          x: randomStartXY ? getRandomInt(window.innerWidth - 45) : 0,\n          y: !randomStartXY ? getRandomInt(window.innerHeight - 45) : 0,\n          direction: randomStartXY ? 'down' : 'right',\n        };\n        setEnemies((prevEnemies: any) => [...prevEnemies, newEnemy]);\n      }\n    }, spawnEnemyDelay);\n\n    return () => clearInterval(enemyCreationInterval);\n  }, []);\n\n  useEffect(() => {\n    const movementInterval = setInterval(() => {\n      setEnemies((prevEnemies: any) =>\n        prevEnemies\n          .map((enemy: any) => {\n            if (enemy.direction === 'right') {\n              return enemy.x < window.innerWidth - 45\n                ? { ...enemy, x: enemy.x + 15 }\n                : null;\n            } else if (enemy.direction === 'down') {\n              return enemy.y < window.innerHeight - 45\n                ? { ...enemy, y: enemy.y + 15 }\n                : null;\n            }\n            return enemy;\n          })\n          .filter((enemy: any) => enemy !== null),\n      );\n    }, defaultEnemySpeed);\n\n    return () => clearInterval(movementInterval);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (e: any) => {\n      switch (e.key) {\n        case ' ':\n          attack();\n          break;\n        case 'ArrowLeft':\n          setPosition((prev) => ({ ...prev, x: Math.max(prev.x - 15, 0) }));\n          setDirection('left');\n          break;\n        case 'ArrowDown':\n          setPosition((prev) => ({\n            ...prev,\n            y: Math.min(prev.y + 15, window.innerHeight - size),\n          }));\n          setDirection('down');\n          break;\n        case 'ArrowUp':\n          setPosition((prev) => ({\n            ...prev,\n            y: Math.max(prev.y - 15, 0),\n          }));\n          setDirection('up');\n          break;\n        case 'ArrowRight':\n          setPosition((prev) => ({\n            ...prev,\n            x: Math.min(prev.x + 15, window.innerWidth - size),\n          }));\n          setDirection('right');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [position]);\n\n  useEffect(() => {\n    switch (direction) {\n      case 'left':\n        setWeaponPosition({\n          x: position.x - weaponSize.height,\n          y: position.y + (size - weaponSize.height) / 2,\n        });\n        break;\n      case 'right':\n        setWeaponPosition({\n          x: position.x + size,\n          y: position.y + (size - weaponSize.height) / 2,\n        });\n        break;\n      case 'up':\n        setWeaponPosition({\n          x: position.x + (size - weaponSize.width) / 2,\n          y: position.y - weaponSize.height,\n        });\n        break;\n      case 'down':\n        setWeaponPosition({\n          x: position.x + (size - weaponSize.width) / 2,\n          y: position.y + size,\n        });\n        break;\n      default:\n        break;\n    }\n  }, [direction, position]);\n\n  const attack = () => {\n    setIsAttack(true);\n    setTimeout(() => {\n      setIsAttack(false);\n    }, 200);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"health-container\">\n        {healthPoint.map((item) => (\n          <img src={healthIcon} alt=\"\" key={item} />\n        ))}\n      </div>\n      {enemies.length > 0 &&\n        enemies.map((item: any) => (\n          <div\n            className=\"enemy\"\n            key={item.id}\n            style={{\n              left: item.x,\n              top: item.y,\n              width: 30,\n              height: 30,\n            }}></div>\n        ))}\n      <div\n        className=\"square\"\n        style={{\n          left: position.x,\n          top: position.y,\n          width: size,\n          height: size,\n        }}></div>\n      {isAttack && (\n        <div\n          className=\"weapon\"\n          style={{\n            left: weaponPosition.x,\n            top: weaponPosition.y,\n            width: ['up', 'down'].includes(direction)\n              ? weaponSize.width\n              : weaponSize.height,\n            height: ['up', 'down'].includes(direction)\n              ? weaponSize.height\n              : weaponSize.width,\n          }}></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
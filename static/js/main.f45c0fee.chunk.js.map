{"version":3,"sources":["assets/images/health.png","helpers/getRandomInt.ts","components/Timer.tsx","components/PowerUp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","getRandomInt","max","Math","floor","random","Timer","props","time","setTime","useEffect","interval","setInterval","prevTime","clearInterval","React","createElement","className","PowerUp","currentPowerUp","position","setCurrentPowerUp","size","setEnemies","setHealthPoint","x","y","type","prev","length","style","left","top","App","setPosition","useState","window","innerWidth","innerHeight","weaponPosition","setWeaponPosition","direction","setDirection","enemies","enemiesTotalCount","setEmiesTotalCount","defaultEnemySpeed","setDefaultEnemySpeed","spawnEnemyDelay","setSpawnEnemyDelay","isAttack","setIsAttack","healthPoint","weaponSize","powerUps","isShootByEnemy","find","item","filter","id","index","alert","concat","resetGame","moveFasterId","speedEnemyImprove","enemyCreationInterval","Date","now","randomStartXY","newEnemy","prevEnemies","movementInterval","map","enemy","handleKeyDown","e","key","attack","min","addEventListener","removeEventListener","spawnPowerUpId","getPowerUp","setTimeout","randomIndex","src","healthIcon","alt","width","height","includes","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f45c0fee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/health.bc5ad905.png\";","export const getRandomInt = (max: number) => {\r\n  return Math.floor(Math.random() * max);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\ninterface IProps {\r\n  time: number;\r\n  setTime: any;\r\n}\r\n\r\nconst Timer = (props: IProps) => {\r\n  const { time, setTime } = props;\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime((prevTime: any) => prevTime + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return <div className=\"timer\">Time: {time}</div>;\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useEffect } from 'react';\r\nimport '../App.css';\r\n\r\ninterface IProps {\r\n  currentPowerUp: '' | { type: string; x: number; y: number };\r\n  position: { x: number; y: number };\r\n  setCurrentPowerUp: any;\r\n  size: number;\r\n  //TODO: type\r\n  setTime: any;\r\n  setEnemies: any;\r\n  setHealthPoint: any;\r\n}\r\nconst PowerUp = (props: IProps) => {\r\n  const {\r\n    currentPowerUp,\r\n    position,\r\n    setCurrentPowerUp,\r\n    size,\r\n    setEnemies,\r\n    setHealthPoint,\r\n    setTime,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    //collision beetween person and powerUp\r\n    if (currentPowerUp) {\r\n      const isGetPowerUp =\r\n        currentPowerUp.x < position.x + size &&\r\n        currentPowerUp.x + 36 > position.x &&\r\n        currentPowerUp.y < position.y + size &&\r\n        currentPowerUp.y + 36 > position.y;\r\n\r\n      if (isGetPowerUp) {\r\n        setCurrentPowerUp('');\r\n        if (currentPowerUp.type === 'time') {\r\n          setTime((prev: any) => prev + 10);\r\n        }\r\n        if (currentPowerUp.type === 'health') {\r\n          setHealthPoint((prev: any) => [...prev, prev.length + 1]);\r\n        }\r\n        if (currentPowerUp.type === 'refresh') {\r\n          setEnemies([]);\r\n        }\r\n      }\r\n    }\r\n  }, [position, currentPowerUp]);\r\n\r\n  if (!currentPowerUp) {\r\n    return null;\r\n  }\r\n  if (currentPowerUp.type === 'time') {\r\n    return (\r\n      <div\r\n        className=\"power-up time\"\r\n        style={{\r\n          left: currentPowerUp.x,\r\n          top: currentPowerUp.y,\r\n        }}></div>\r\n    );\r\n  }\r\n  if (currentPowerUp.type === 'health') {\r\n    return (\r\n      <div\r\n        className=\"power-up health\"\r\n        style={{\r\n          left: currentPowerUp.x,\r\n          top: currentPowerUp.y,\r\n        }}></div>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"power-up refresh\"\r\n      style={{\r\n        left: currentPowerUp.x,\r\n        top: currentPowerUp.y,\r\n      }}></div>\r\n  );\r\n};\r\n\r\nexport default PowerUp;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport healthIcon from './assets/images/health.png';\nimport { getRandomInt } from './helpers/getRandomInt';\nimport Timer from './components/Timer';\nimport PowerUp from './components/PowerUp';\n\ntype IDirection = 'right' | 'left' | 'up' | 'down';\n\nfunction App() {\n  //positions\n  const [position, setPosition] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  });\n  const [weaponPosition, setWeaponPosition] = useState({ x: 75, y: 100 });\n  const [direction, setDirection] = useState<IDirection>('down');\n  //enemies\n  const [enemies, setEnemies] = useState<any>([]);\n  const [enemiesTotalCount, setEmiesTotalCount] = useState(30);\n  const [defaultEnemySpeed, setDefaultEnemySpeed] = useState(100);\n  const [spawnEnemyDelay, setSpawnEnemyDelay] = useState(200);\n  //else\n  const [time, setTime] = useState(0);\n  const [isAttack, setIsAttack] = useState(false);\n  const [healthPoint, setHealthPoint] = useState([1, 2, 3, 4, 5]);\n  const [currentPowerUp, setCurrentPowerUp] = useState<\n    '' | { type: string; x: number; y: number }\n  >('');\n\n  const size = 50;\n  const weaponSize = {\n    height: 20,\n    width: 5,\n  };\n  const powerUpSpawnDelay = 10000;\n  const powerUps = ['time', 'health', 'refresh', ''];\n\n  useEffect(() => {\n    //collision beetween person and enemy\n    if (healthPoint.length > 0) {\n      const isShootByEnemy =\n        enemies.length > 0 &&\n        enemies.find(\n          (item: any) =>\n            item.x < position.x + size &&\n            item.x + 15 > position.x &&\n            item.y < position.y + size &&\n            item.y + 20 > position.y,\n        );\n      if (isShootByEnemy) {\n        setEnemies((prev: any) =>\n          prev.filter((item: any) => item.id !== isShootByEnemy.id),\n        );\n        setHealthPoint((prev) =>\n          prev.filter((item, index) => index !== prev.length - 1),\n        );\n      }\n    }\n  }, [position, enemies]);\n\n  useEffect(() => {\n    //end game\n    if (healthPoint.length === 0) {\n      alert(`Your time is ${time} seconds`);\n      resetGame();\n      setTime(0);\n    }\n  }, [healthPoint]);\n\n  useEffect(() => {\n    //harder every 5 seconds\n    const speedEnemyImprove = () => {\n      setDefaultEnemySpeed((prev) => prev - 10);\n      setEmiesTotalCount((prev) => prev + 5);\n      setSpawnEnemyDelay((prev) => prev / 2);\n    };\n    const moveFasterId = setInterval(speedEnemyImprove, 20000);\n    return () => clearInterval(moveFasterId);\n  }, []);\n\n  useEffect(() => {\n    //spawn enemies\n    const enemyCreationInterval = setInterval(() => {\n      if (enemies.length < enemiesTotalCount) {\n        const id = Date.now();\n        const randomStartXY = getRandomInt(2);\n        const newEnemy = {\n          id,\n          x: randomStartXY ? getRandomInt(window.innerWidth - 45) : 0,\n          y: !randomStartXY ? getRandomInt(window.innerHeight - 45) : 0,\n          direction: randomStartXY ? 'down' : 'right',\n        };\n        setEnemies((prevEnemies: any) => [...prevEnemies, newEnemy]);\n      }\n    }, spawnEnemyDelay);\n\n    return () => clearInterval(enemyCreationInterval);\n  }, []);\n\n  useEffect(() => {\n    //enemies movement\n    const movementInterval = setInterval(() => {\n      setEnemies((prevEnemies: any) =>\n        prevEnemies\n          .map((enemy: any) => {\n            if (enemy.direction === 'right') {\n              return enemy.x < window.innerWidth - 45\n                ? { ...enemy, x: enemy.x + 15 }\n                : null;\n            } else if (enemy.direction === 'down') {\n              return enemy.y < window.innerHeight - 45\n                ? { ...enemy, y: enemy.y + 15 }\n                : null;\n            }\n            return enemy;\n          })\n          .filter((enemy: any) => enemy !== null),\n      );\n    }, defaultEnemySpeed);\n\n    return () => clearInterval(movementInterval);\n  }, [defaultEnemySpeed]);\n\n  useEffect(() => {\n    //press btns\n    const handleKeyDown = (e: any) => {\n      switch (e.key) {\n        case ' ':\n          attack();\n          break;\n        case 'ArrowLeft':\n          setPosition((prev) => ({ ...prev, x: Math.max(prev.x - 15, 0) }));\n          setDirection('left');\n          break;\n        case 'ArrowDown':\n          setPosition((prev) => ({\n            ...prev,\n            y: Math.min(prev.y + 15, window.innerHeight - size),\n          }));\n          setDirection('down');\n          break;\n        case 'ArrowUp':\n          setPosition((prev) => ({\n            ...prev,\n            y: Math.max(prev.y - 15, 0),\n          }));\n          setDirection('up');\n          break;\n        case 'ArrowRight':\n          setPosition((prev) => ({\n            ...prev,\n            x: Math.min(prev.x + 15, window.innerWidth - size),\n          }));\n          setDirection('right');\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [position]);\n\n  useEffect(() => {\n    //person attack\n    switch (direction) {\n      case 'left':\n        setWeaponPosition({\n          x: position.x - weaponSize.height,\n          y: position.y + (size - weaponSize.height) / 2,\n        });\n        break;\n      case 'right':\n        setWeaponPosition({\n          x: position.x + size,\n          y: position.y + (size - weaponSize.height) / 2,\n        });\n        break;\n      case 'up':\n        setWeaponPosition({\n          x: position.x + (size - weaponSize.width) / 2,\n          y: position.y - weaponSize.height,\n        });\n        break;\n      case 'down':\n        setWeaponPosition({\n          x: position.x + (size - weaponSize.width) / 2,\n          y: position.y + size,\n        });\n        break;\n      default:\n        break;\n    }\n  }, [direction, position]);\n\n  useEffect(() => {\n    const spawnPowerUpId = setInterval(getPowerUp, powerUpSpawnDelay);\n    return () => clearInterval(spawnPowerUpId);\n  }, []);\n\n  const attack = () => {\n    setIsAttack(true);\n    setTimeout(() => {\n      setIsAttack(false);\n    }, 200);\n  };\n\n  const resetGame = () => {\n    setHealthPoint([1, 2, 3, 4, 5]);\n    setEnemies([]);\n    setPosition({\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    });\n  };\n\n  const getPowerUp = () => {\n    const randomIndex = Math.floor(Math.random() * powerUps.length);\n    setCurrentPowerUp(\n      powerUps[randomIndex]\n        ? {\n            type: powerUps[randomIndex],\n            x: getRandomInt(window.innerWidth - 80),\n            y: getRandomInt(window.innerHeight - 80),\n          }\n        : '',\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Timer time={time} setTime={setTime} />\n      <div className=\"health-container\">\n        {healthPoint.map((item) => (\n          <img src={healthIcon} alt=\"\" key={item} />\n        ))}\n      </div>\n      {enemies.length > 0 &&\n        enemies.map((item: any) => (\n          <div\n            className=\"enemy\"\n            key={item.id}\n            style={{\n              left: item.x,\n              top: item.y,\n              width: 30,\n              height: 30,\n            }}></div>\n        ))}\n      {currentPowerUp && (\n        <PowerUp\n          currentPowerUp={currentPowerUp}\n          setCurrentPowerUp={setCurrentPowerUp}\n          position={position}\n          size={size}\n          setEnemies={setEnemies}\n          setHealthPoint={setHealthPoint}\n          setTime={setTime}\n        />\n      )}\n      <div\n        className=\"square\"\n        id=\"person\"\n        style={{\n          left: position.x,\n          top: position.y,\n          width: size,\n          height: size,\n        }}></div>\n      {isAttack && (\n        <div\n          className=\"weapon\"\n          style={{\n            left: weaponPosition.x,\n            top: weaponPosition.y,\n            width: ['up', 'down'].includes(direction)\n              ? weaponSize.width\n              : weaponSize.height,\n            height: ['up', 'down'].includes(direction)\n              ? weaponSize.height\n              : weaponSize.width,\n          }}></div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}